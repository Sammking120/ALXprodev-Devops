#!/bin/bash

# Set variables
POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_BASE_URL="https://pokeapi.co/api/v2/pokemon"
ERROR_FILE="errors.txt"
DELAY_SECONDS=2
MAX_RETRIES=3
RETRY_DELAY=5

# Function to check internet connectivity
check_internet() {
    ping -c 1 google.com >/dev/null 2>&1
    return $?
}

# Function to log errors
log_error() {
    echo "$(date): $1" >> "$ERROR_FILE"
}

# Function to fetch data for a single Pokémon
fetch_pokemon_data() {
    local pokemon=$1
    local output_file="${pokemon}.json"
    local attempt=1
    local success=0

    echo "Fetching data for $pokemon..."
    
    while [ $attempt -le $MAX_RETRIES ]; do
        echo "Attempt $attempt of $MAX_RETRIES for $pokemon..."
        
        if curl -s -o "$output_file" "$API_BASE_URL/$pokemon"; then
            # Check if response is valid JSON
            if jq . "$output_file" >/dev/null 2>&1; then
                success=1
                break
            else
                log_error "Invalid JSON response for $pokemon on attempt $attempt"
                rm "$output_file"
            fi
        else
            log_error "Failed to fetch data for $pokemon on attempt $attempt"
        fi
        
        attempt=$((attempt + 1))
        
        if [ $attempt -le $MAX_RETRIES ]; then
            echo "Waiting $RETRY_DELAY seconds before retry..."
            sleep $RETRY_DELAY
        fi
    done

    if [ $success -eq 1 ]; then
        echo "Successfully fetched data for $pokemon and saved to $output_file"
    else
        log_error "Failed to fetch valid data for $pokemon after $MAX_RETRIES attempts"
        return 1
    fi
}

# Check internet connectivity
if ! check_internet; then
    log_error "No internet connection available"
    exit 1
fi

# Loop through Pokémon list
for pokemon in "${POKEMON_LIST[@]}"; do
    fetch_pokemon_data "$pokemon"
    # Add delay between requests to avoid rate-limiting
    if [ $? -eq 0 ] && [ "$pokemon" != "${POKEMON_LIST[-1]}" ]; then
        echo "Waiting $DELAY_SECONDS seconds before next request..."
        sleep $DELAY_SECONDS
    fi
done

echo "Completed fetching data for all Pokémon"